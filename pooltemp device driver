metadata {
    definition (name: "Hubitat Simulated Temperature", namespace: "brennonsapps", author: "bscuderi") {
        // capabilities
        capability "Temperature Measurement"
        capability "Switch Level"
        capability "Sensor"
        //capability "Health Check"
        // commands
        command "setTemperature", ["number"]
    }
}

/* Parse incoming device messages to generate events
def parse(String description) {
    def pair = description.split(":")
    createEvent(name: pair[0].trim(), value: pair[1].trim(), unit:"F")
}

def installed() {
    initialize()
}

def updated() {
    initialize()
}

def initialize() {
    sendEvent(name: "DeviceWatch-DeviceStatus", value: "online")
    sendEvent(name: "healthStatus", value: "online")
    sendEvent(name: "DeviceWatch-Enroll", value: [protocol: "cloud", scheme:"untracked"].encodeAsJson(), displayed: false)
    if (!device.currentState("temperature")) {
        setTemperature(getTemperature())
    }
}
*/

def setLevel(value) {
    setTemperature(value)
}

/*
def up() {
    setTemperature(getTemperature() + 1)
}

def down() {
    setTemperature(getTemperature() - 1)
}
*/
def setTemperature(value) {
    sendEvent(name:"temperature", value: value, unit: "Â°F")
}
/*
private getTemperature() {
    def ts = device.currentState("temperature")
    Integer value = ts ? ts.integerValue : 72
    return value
}
*/
